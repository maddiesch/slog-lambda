name: Go
on:
  push:
    branches: ["main"]
  pull_request: {}
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: ["1.23"]
        os: ["ubuntu-latest", "windows-latest"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - run: go test -v -race ./... -timeout 2m
  coverage:
    runs-on: ubuntu-latest
    needs: [test, build]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: go test -coverprofile=coverage.txt ./... -timeout 2m
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: ["1.23"]
        os: ["ubuntu-latest", "windows-latest"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - run: go build ./...
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
  code-vulnerability:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: go install golang.org/x/vuln/cmd/govulncheck@latest
      - run: govulncheck ./...
  code-formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Check Formatting
        run: |-
          PATH="$PATH:$(go env GOROOT)/bin"

          if [ -x gofmt ]; then
            echo "gofmt not found"
            exit 1
          fi

          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "Files are not properly formatted"
            gofmt -s -l .
            exit 1
          fi
  nil-checking:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: go install go.uber.org/nilaway/cmd/nilaway@latest
      - run: nilaway ./...
